# Use new trusty images, should yield newer compilers and packages
sudo: required
dist: trusty
language: cpp

matrix:
  include:

    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=g++-5

    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env: COMPILER=g++-6

    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: COMPILER=g++-7

    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-3.6
          packages:
            - clang-3.6
      env: COMPILER=clang++-3.6

    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-3.7
          packages:
            - clang-3.7
      env: COMPILER=clang++-3.7

    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env: COMPILER=clang++-5.0


before_install:
  - sudo apt-get update -qq
  - pip install --user cpp-coveralls
  - sudo apt-get install -y -qq build-essential cmake curl lcov libc++-dev
  - export COVERALLS_SERVICE_NAME=travis-ci
  - export COVERALLS_REPO_TOKEN=qMnxOmVdPZQAy8NayupByFotwClBMzdjN

script:
  - mkdir build
  - cd build
  - if [ $CXX == "clang++" ]; then
      cmake --enable-gcov -DCOVERALLS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=-stdlib=libc++ -DCMAKE_CXX_COMPILER=$COMPILER .. && make;
      echo $CXX
      echo "clang++ compiling"
    else
      echo "g++ compiling"
      cmake --enable-gcov -DCOVERALLS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=$COMPILER .. && make
    fi
  - make coveralls
  - ./VigenereTests